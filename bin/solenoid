#!/usr/bin/env node
var fs = require('fs'),
    path = require('path'),
    optimist = require('optimist'),
    solenoid = require('../'),
    config = JSON.parse(fs.readFileSync(path.join(process.env.HOME, '.solenoidconf'))),
    argv;

argv = optimist
  .alias('u', 'app-user')
  .alias('a', 'app-name')
  .alias('e', 'app-env')
  .alias('v', 'app-version')
  .alias('p', 'pidfile')
  .argv;

options = {
  storage: config.storage,
  instruments: config.instruments,
  engines: config.engines,
  runDir: config.runDir
};

action = argv._[0];
if (['start', 'restart', 'stop'].indexOf(action) === -1) {
  console.error('Action is required and must be either "start" or "stop"');
}

if (!argv.pidfile) {
  console.error('PID file is required');
  process.exit(1);
}

options.pidFile = argv.pidfile;

if (action === 'start') {
  if (!argv['app-user'] || !argv['app-name'] || !argv['app-version']) {
    console.error('Application name, user and version are required');
    process.exit(1);
  }

  options.app = {
    user: argv['app-user'],
    name: argv['app-name'],
    version: argv['app-version'],
    env: argv['app-env']
  };
  console.log('Starting application...');
}
else {
  console.log('Stopping application...');
}

solenoid[action](options, function (err) {
  if (err) {
    console.error('Error: ' + err.message);
    return process.exit(1);
  }

  console.log('Success:' + action);
});
